- Implement Long deconstruction
 - this is useful beyond just function arguments, useful in the case of
   deconstructing results from function, and other things
 - Maybe something like Split?
   - puts the number of split elements onto CFV?
   - Index function is of the first element on VS
- Implement conversion to IR
- find way to pass environment variables for jobs
  in special way so they aren't ever set for the
  host process
- finish scripting
 - rewrite to not link directly to dl
 - interactive/compiled mode
 - permanent caches
 - pre-caching
 - startup scripts
- Implement running functions as jobs
 - implement function output redirection here
 - do what bash does an run them in a new wash process
- Re-write functions and handlers in scripts where possible
- put various settings and things into settings variables
- improve passing of environment variables to new jobs
- clean up controls Ã  la input
- completion
 - generalize search functionality
  - infers from actions, content, other things
 - hook into bash completion
 - Parameter expansion, based around regex
  - automatically fix bash-style patterns
- Polish history implementation
 - is a type of completion
 - maybe a separate object class
 - combine previous commands, lines, exit statuses and the such?
- bash integration

future:
- function paths?
- better terminal protocol
 - over dbus
- terminal client to match
- wash_start entry points

Thoughts on completion

Implement as a graph, where each node has info like line, time, etc
completion are weight functions
 => two major classes of completions:
  - min-complete
  - max-complete
 where each selects either the min-weighted or max-weighted neighbor
 => things like history are simple functions of time, min-complete

do it flx-style, so input of characters that all appear in that order
in the completion, but maybe not right next to each other